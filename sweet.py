# -*- coding: utf-8 -*-
"""
Created on Mon Nov  6 22:20:26 2023

@author: lijin
"""

from model import run_exp
from model import default_params as params
import utils as utl
from brian2 import Hz
import pickle
from pathlib import Path

config = {'path_comp': './2023_03_23_completeness_630_final.csv',
          'path_con': './2023_03_23_connectivity_630_final.parquet', 'n_proc': 15, 'path_res': Path('./sweet/GRN')}

# set output path

neu_sugar = [720575940627810347,
720575940620900446,
720575940633143833,
720575940628853239,
720575940610788069,
720575940639198653,
720575940632425919,
720575940622486922,
720575940638183652,
720575940639043280,
720575940617000768,
720575940616177458,
720575940621502051,
720575940612579053,
720575940611875570,
720575940622902535,
720575940616885538,
720575940623396616,
720575940615261073,
720575940629176663,
720575940630233916,
720575940640649691,
720575940645332259,
720575940612670570,
720575940624963786,
720575940631898285,
720575940607347634,
720575940638202345,
720575940626674182,
720575940660292225,
720575940625861168,
720575940639332736,
720575940637568838,
720575940613996959,
720575940632889389,
720575940617857694,
720575940619287278,
720575940635392910,
720575940627490663,
720575940644965399,
720575940630797113,
720575940621754367,
720575940622825736,
720575940625203504,
720575940613786774,
720575940629852866,
720575940609919897,
720575940629025324,
720575940617181725,
720575940622413508,
720575940607737099,
720575940616811265,
720575940630553415,
720575940635172191,
720575940606002609,
720575940620185515,
720575940616742657,
720575940620589838,
720575940604590048,
720575940632634911,
720575940614734186,
720575940632146340,
720575940608305161,
720575940622405708,
720575940617398502,
720575940622371037,
720575940612556402,
720575940636487598,
720575940631147148,
720575940634683743,
720575940620296641,
720575940606801282,
720575940627907883,
720575940629884119,
720575940632880173,
720575940617801499,
720575940628116476,
720575940629510338,
720575940630968335,
720575940610296622,
720575940614302370,
720575940627961104,
720575940618706811,
720575940618706043,
720575940622136022,
720575940634023961,
720575940638011994,
720575940620692833,
720575940612422579,
720575940641339611,
720575940622200233,
720575940616167218,
720575940620289701,
720575940617510720


]

# freqs =  [ *range(10, 201, 10) ]
freqs = [10]
# run siumulations
# Calculate which neurons respond to sugar GRN firing at the specified frequencies.
for f in freqs:

    params['r_poi'] = f * Hz

    run_exp(exp_name='sugarR_{}Hz'.format(f), neu_exc=neu_sugar, params=params, **config, force_overwrite=True)

# process result
# dictionary containing the GRN names and each Flywire ID.
flyid2name = { f: 'sugar_{}'.format(i+1) for i, f in enumerate(neu_sugar) }

# list of output files
ps = ['{}/sugarR_{}Hz.parquet'.format(config['path_res'], f) for f in freqs ]

# load data from disk
df_spike = utl.load_exps(ps)
df_rate, df_rate_std = utl.get_rate(df_spike, t_run=params['t_run'], n_run=params['n_run'], flyid2name=flyid2name)

# save the spiking rates and standard deviations for each neuron
df_rate.fillna(0).to_csv(config['path_res'].parent / 'sweet_rate.csv')
df_rate_std.fillna(0).to_csv(config['path_res'].parent / 'sweet_rate_std.csv')